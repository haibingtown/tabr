% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/notes.R
\name{note_is_natural}
\alias{note_is_natural}
\alias{note_is_accidental}
\alias{note_is_flat}
\alias{note_is_sharp}
\alias{naturalize}
\alias{sharpen_flat}
\alias{flatten_sharp}
\alias{note_set_key}
\alias{pretty_notes}
\title{Note naturalness and keys}
\usage{
note_is_natural(notes)

note_is_accidental(notes)

note_is_flat(notes)

note_is_sharp(notes)

naturalize(notes, type = c("both", "flat", "sharp"),
  ignore_octave = FALSE)

sharpen_flat(notes, ignore_octave = FALSE)

flatten_sharp(notes, ignore_octave = FALSE)

note_set_key(notes, key = "c")

pretty_notes(notes, ignore_octave = TRUE)
}
\arguments{
\item{notes}{character, a noteworthy string, space-delimited or vector of individual entries.}

\item{type}{character, type of note to naturalize.}

\item{ignore_octave}{logical, strip any octave notation that may be present, returning only the basic notes without explicit pitch.}

\item{key}{character, key signature to coerce any accidentals to the appropriate form for the key. May also specify \code{"sharp"} or \code{"flat"}.}
}
\value{
character
}
\description{
Helper functions for inspecting and manipulating accidentals in noteworthy strings.
}
\details{
In this context, sharpening flats and flattening sharps refers to inverting their notation, not raising and lowering a flatted or sharped note by one semitone.
For the latter, use \code{naturalize}, which removes flat and/or sharp notation from a string.

The \code{note_is_*} functions strictly allow individual notes, not chords.
The other functions listed here accept any noteworthy string including those containing chords.
}
\examples{
x <- "a_ a a#"
note_is_natural(x)
note_is_accidental(x)
note_is_flat(x)
note_is_sharp(x)
note_set_key(x, "f")
note_set_key(x, "g")

x <- "e_2 a_, c#f#a#"
naturalize(x)
naturalize(x, "sharp")
sharpen_flat(x)
flatten_sharp(x)
pretty_notes(x)
}
