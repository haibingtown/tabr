% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert.R
\name{to_tabr}
\alias{to_tabr}
\alias{from_chorrrds}
\title{Music notation syntax converters}
\usage{
to_tabr(id, ...)

from_chorrrds(chords, key = "c", guitar = FALSE, gc_args = list())
}
\arguments{
\item{...}{arguments passed to the function matched by \code{id}.}

\item{chords}{character vector of chords output from the \code{chorrrds}
package.}

\item{key}{key signature, used to enforce consistent use of flats or sharps.}

\item{guitar}{logical, attempt to match input chords to known guitar chords
in \code{\link{guitarChords}}. Otherwise by default standard piano chords of
consecutive pitches covering minimum pitch range are returned.}

\item{gc_args}{named list of additional arguments passed to
\code{\link{gc_info}}, used when \code{guitar = TRUE}.}
}
\value{
a noteworthy string
}
\description{
Convert alternative representations of music notation to \code{tabr} syntax.
}
\details{
These functions convert music notation from other data sources into the style
used by \code{tabr} for music analysis and sheet music transcription.

Some sources do not offer as complete or explicit information in order to
make sheet music. However, what is available in those formats is converted
to the extent possible and available function arguments can allow the user
to add some additional specification. Different input syntax makes use of a
different syntax converter. Depending on the format, different arguments
may be available and/or required. The general wrapper function for all of
the available syntax converters is \code{to_tabr}. This function takes an
\code{id} argument for the appropriate converter function. See examples.

For example, output from the \code{chorrrds} package that scrapes chord
information from the Cifraclub website only provides chords, not note for
note transcription data for any particular instrument. This means the result
of syntax conversion still yields only chords, which is fine for data
analysis but doesn't add anything useful for sheet music transcription.

The input in this case also does not specify distinct pitches by assigning
octaves numbers to a chord's notes, not even the root note. It remains up to
the user if they want to apply the information. By default, every chord
starts in octave three. It is also ambiguous how the chord is played since
all that is provided is a generic chord symbol. By default a standard chord
is constructed if it can be determined.

Setting \code{guitar = TRUE} switches
to using the \code{\link{guitarChords}} dataset to find matching guitar
chords using \code{\link{gc_info}}, which can be provided additional
arguments in a named list to \code{gc_args}. For guitar, this allows some
additional control over the actual structure of the chord, its shape and
position on the guitar neck. The options will never work perfectly for all
chords in \code{chords}, but at a minimum, typical default component pitches
will be determined and returned in \code{tabr} notation style.
}
\examples{
chords <- c("Bb", "Bbm", "Bbm7", "Bbm7(b5)", "Bb7(#5)/G", "Bb7(#5)/Ab")
from_chorrrds(chords)
to_tabr(id = "chorrrds", chords = chords)

from_chorrrds(chords, guitar = TRUE)
to_tabr(id = "chorrrds", chords = chords, guitar = TRUE)
}
