% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/music.R
\name{music}
\alias{music}
\alias{musical}
\alias{as_music}
\alias{is_music}
\alias{music_split}
\alias{music_notes}
\alias{music_info}
\alias{music_tsig}
\alias{music_lyrics}
\title{Check music string validity}
\usage{
musical(x)

as_music(notes, info = NULL, lyrics = NULL, accidentals = NULL,
  tsig = "4/4", format = NULL)

is_music(x)

music_split(x)

music_notes(x)

music_info(x)

music_tsig(x)

music_lyrics(x)
}
\arguments{
\item{x}{character, a music string. May or may not have the 'music' class.}

\item{notes, info}{noteworthy and note info strings. For \code{as_music}, a
complete music string is assumed for \code{notes} when \code{info = NULL}.}

\item{lyrics}{optional \code{lyrics} object, attached to output as an
attribute.}

\item{accidentals}{\code{NULL} or character, represent accidentals,
\code{"flat"} or \code{"sharp"}.}

\item{tsig}{character, store the time signature as a music attribute.
Defaults to \code{"4/4"}.}

\item{format}{\code{NULL} or character, the timestep delimiter format,
\code{"space"} or \code{"vector"}.}
}
\value{
depends on the function
}
\description{
Check whether a string is comprised exclusively of valid syntax for music
strings. A music object can be built from such a string. It combines a
noteworthy string and a note info string.
}
\details{
With note info strings, you are required to enter something at every
timestep, even if it is only the duration. This makes sense because if you
do not enter something, there is simply no indication of a timestep.
A nice feature of music strings is that explicit timesteps are achieved
just by having notes present, allowing you to leave out durations entirely
when they repeat, inheriting them from the previous timestep where duration
was given explicitly. There is no need to enter the same number across
consecutive timesteps; the first will suffice and the rest are automatically
filled in for you when the object is constructed.

\code{musical} returns a scalar logical result indicating whether all
timesteps contain exclusively valid entries.

\code{as_music} can be used to coerce to the \code{music} class.
Coercion will fail if the string is not musical.
The \code{music} class has its own \code{print} and \code{summary} methods.

When \code{accidentals}, \code{format}, or \code{tsig} are \code{NULL},
these settings are inferred from the musical string input.
When mixed formats are present, flats are the default for accidentals and
4/4 common time is the default time signature.
}
\examples{
# note durations inherit from previous timestep if missing
x <- "a#4] b_ c,x d''t8( e)( g_')- a4 c,e_,g, ce_g4. a~8 a1"
is_music(x)
musical(x)
x <- as_music(x)
is_music(x)
x

summary(x)

attributes(x)

music_split(x)
music_notes(x)
music_info(x)
music_tsig(x)
music_lyrics(x)

as_music(x, accidentals = "sharp")

y <- lyrics_template(x)
y[3:8] <- strsplit("These are some song ly- rics", " ")[[1]]
y

x <- as_music(x, lyrics = y)
x
music_lyrics(x)
}
\seealso{
\code{\link{note-checks}}, \code{\link{note-metadata}},
\code{\link{note-summaries}}, \code{\link{note-coerce}}
}
